/*
 * $cd /Jobs/$hunter.pwn

 * Script name:         Deer Hunter
 * Script made by:      Runner
 * Script version:      1.3g HF
 * Created:             16.2.2016.
 * Last Updated:        4.3.2016. (Ho)
 * Object(s) used:      149
 * Vehicle(s) used:     0
 * Hook(s) used:        5
 * Function(s) created: 6
 * Timer(s) created:    4 (3 defer, 1 repeating)
 * Array(s) created:    1
 * Var(s) created:      4
 * Enumator(s) created: 1
 * Command(s) created:  3 + 1(debugging)
 * About script:        Some ultra-wide text goes here!
 */

#include <YSI_Coding\y_hooks>


#define DEER_STREAM_DIST        (100.0)
#define DEER_RESPAWN_TIME       (3)


/*
                    ##     ##    ###    ########   ######
                    ##     ##   ## ##   ##     ## ##    ##
                    ##     ##  ##   ##  ##     ## ##
                    ##     ## ##     ## ########   ######
                     ##   ##  ######### ##   ##         ##
                      ## ##   ##     ## ##    ##  ##    ##
                       ###    ##     ## ##     ##  ######
*/

enum deerenum
{
    id,
    pos,
    bool:rev,
    Float:speed,
    Float:PosX,
    Float:PosY,
    Float:PosZ,
    Meat,
    Dead,
    ResponseTime,
    pCutting
};
new DeerInfo[deerenum];

static
    Whistle[MAX_PLAYERS],
    WhistleTime[MAX_PLAYERS],
    Timer:CutTimer,
    CutTime,
    pMeat[MAX_PLAYERS];

/*
                           _____  _____        __     _______
                     /\   |  __ \|  __ \     /\\ \   / / ____|
                    /  \  | |__) | |__) |   /  \\ \_/ / (___
                   / /\ \ |  _  /|  _  /   / /\ \\   / \___ \
                  / ____ \| | \ \| | \ \  / ____ \| |  ____) |
                 /_/    \_\_|  \_\_|  \_\/_/    \_\_| |_____/


*/

static const Float:deer[][] =
{
    {2572.64551, -105.09906, 50.65935,   0.00000, 0.00000, 169.13982},
    {2561.46558, -103.15896, 51.72099,   1.56000, 2.33999, 217.31976},
    {2560.20581, -103.72968, 51.38723,   2.94000, 12.77999, 154.01984},
    {2557.75854, -102.44080, 50.81713,   -11.52001, 7.73999, 138.23965},
    {2553.04785, -98.47592, 49.83109,   0.72000, 5.69999, 197.03972},
    {2550.69189, -99.36028, 49.28449,   0.72000, 5.69999, 229.73970},
    {2548.50220, -102.62859, 48.64305,   17.94000, 12.65998, 229.73970},
    {2544.68799, -106.73347, 47.67373,   13.86001, 13.19999, 229.73970},
    {2543.09692, -107.55640, 47.25929,   0.00000, 0.00000, -197.16014},
    {2537.14502, -105.75069, 45.92216,   5.04000, 19.02001, -147.06041},
    {2536.04736, -107.03257, 45.43188,   20.70000, 8.64000, -82.80030},
    {2537.06787, -112.92433, 45.09147,   20.70000, 8.64000, -82.68031},
    {2538.24683, -117.26228, 44.67671,   20.70000, 8.64000, -84.30034},
    {2538.55640, -119.58887, 44.34013,   20.70000, 8.64000, -82.68031},
    {2538.64990, -121.85802, 44.08493,   3.96000, 2.33999, -84.78035},
    {2538.98047, -127.60860, 43.97756,   0.00000, 0.00000, -72.66000},
    {2540.96997, -134.09557, 43.97756,   0.00000, 0.00000, -95.94007},
    {2539.81299, -146.18857, 43.32272,   0.00000, 0.00000, -69.06004},
    {2540.64917, -147.92491, 43.40517,   0.00000, 0.00000, -0.84004},
    {2556.36694, -148.53673, 44.92998,   0.00000, 0.00000, -37.56003},
    {2557.29053, -150.80650, 44.88873,   1.20000, 12.30000, -92.58002},
    {2556.62817, -160.16071, 42.81160,   5.52000, 16.56000, -56.16000},
    {2563.39355, -170.09138, 41.31558,   5.52000, 15.72001, -83.58002},
    {2563.59888, -172.25847, 40.92759,   -3.66000, 12.18001, -123.84003},
    {2561.47583, -175.37045, 40.16623,   -3.66000, 12.18001, -131.45998},
    {2555.65259, -182.02530, 38.21372,   -3.66000, 12.18001, -130.31998},
    {2552.80078, -185.03732, 37.34116,   -3.66000, 12.18001, -124.62003},
    {2548.53589, -191.28154, 35.72174,   5.04000, 14.40002, -110.76011},
    {2548.83130, -193.40227, 35.44270,   9.54000, 4.62000, -49.20002},
    {2552.69702, -197.47780, 35.11330,   8.76000, 5.76000, -31.80000},
    {2562.82056, -203.36911, 34.25761,   9.12000, 0.66000, -46.20000},
    {2563.42676, -205.25493, 33.96613,   11.76001, 15.60001, -70.38000},
    {2565.56079, -211.55675, 32.87057,   9.36000, 14.40000, -71.64000},
    {2566.86743, -215.45711, 32.18089,   9.66000, 11.58000, -70.50007},
    {2567.74170, -218.08292, 31.85281,   10.02000, 0.00001, -69.00006},
    {2569.15063, -221.28960, 32.02307,   -3.36000, -7.37999, -14.46006},
    {2571.42603, -221.55002, 32.30524,   1.08001, -1.49999, 30.23993},
    {2571.70068, -220.05492, 32.30780,   -2.99999, -2.22000, 96.23991},
    {2571.30591, -216.85779, 32.45168,   -2.75999, -4.92000, 97.79990},
    {2571.14160, -215.41667, 32.71856,   -1.91999, -11.76000, 91.13991},
    {2570.53857, -211.73222, 33.43472,   -3.41999, -5.88000, 116.15993},
    {2568.01636, -207.49765, 34.04610,   -1.91999, -11.76000, 85.67997},
    {2568.42114, -206.47629, 34.30405,   9.05999, -8.75999, 28.79991},
    {2572.15869, -204.57463, 35.16402,   15.72001, -7.07999, 27.35991},
    {2575.59277, -203.15218, 35.87717,   8.58000, -9.78000, 20.27992},
    {2579.43506, -201.86176, 36.65063,   8.58000, -9.78000, 20.27992},
    {2583.00073, -200.59567, 37.33983,   8.58000, -9.78000, 18.11992},
    {2586.61987, -199.43823, 38.04026,   8.58000, -9.78000, 18.11992},
    {2587.37402, -198.89171, 38.16502,   8.58000, -9.78000, 77.45992},
    {2588.59399, -196.04410, 38.97840,   8.58000, -9.78000, 77.45992},
    {2589.23779, -193.54887, 39.19565,   0.24000, -3.66000, 77.21987},
    {2590.03662, -189.94807, 39.55364,   -3.12000, -5.64000, 77.45992},
    {2590.53345, -186.16971, 39.87114,   1.20000, -3.72000, 110.69991},
    {2589.36401, -183.25389, 40.06317,   0.00000, -3.18000, 110.69991},
    {2587.94751, -179.66779, 40.50081,   0.78000, -14.22000, 110.69991},
    {2587.67993, -179.00092, 40.61821,   -2.40000, -12.90000, 120.65990},
    {2585.86646, -176.16690, 41.12578,   -4.32000, -2.88001, 134.93988},
    {2581.20093, -171.84029, 41.79692,   -3.06000, -0.66000, 129.53995},
    {2574.65527, -164.31084, 43.09355,   -2.82000, -9.47999, 123.95992},
    {2574.65698, -162.36072, 43.50632,   3.84000, -12.06000, 72.95992},
    {2575.61499, -160.81429, 43.87516,   8.27999, -10.31997, 49.97997},
    {2577.86206, -158.53122, 44.46305,   9.59999, -9.05999, 49.31997},
    {2579.95728, -156.14134, 44.53996,   6.90000, -1.85998, 49.31997},
    {2582.82861, -152.42522, 44.57788,   -0.24000, -2.57999, 90.17997},
    {2582.68701, -150.62685, 44.63337,   0.66000, -1.91998, 121.61996},
    {2581.68579, -149.01532, 44.97980,   -6.84000, -10.55997, 121.61996},
    {2580.37769, -147.09584, 45.38971,   -6.30000, -11.93997, 126.35996},
    {2578.38770, -144.46463, 45.94719,   -7.62001, -7.43996, 121.61996},
    {2577.79785, -143.61449, 46.12391,   -0.48001, -7.61996, 133.67987},
    {2576.06470, -141.96265, 46.49652,   -8.04001, -4.67996, 134.27997},
    {2573.42725, -139.53702, 47.01730,   -7.38001, -3.41996, 135.05995},
    {2570.75635, -137.13086, 47.60234,   -6.42001, -10.97996, 142.07990},
    {2569.16724, -135.93413, 47.91127,   -6.96001, -10.67996, 133.43993},
    {2567.92651, -133.74477, 48.33684,   0.83999, -12.47994, 101.45992},
    {2568.21191, -131.41373, 48.74577,   12.60000, -7.19993, 66.89998},
    {2571.45557, -123.67330, 50.10349,   6.72001, -11.45995, 58.91994},
    {2572.80615, -121.38607, 50.15835,   1.79999, -1.19995, 57.71996},
    {2575.14331, -117.78918, 50.11590,   4.79999, -0.47995, 70.49993},
    {2576.73145, -112.77518, 50.09543,   5.33999, -7.49995, 129.95988},
    {2574.46533, -110.65219, 50.35270,   -1.02001, -5.87995, 146.15988},
    {2572.15698, -108.99335, 50.63778,   -1.02001, -5.87995, 166.73982},
    {2570.42700, -108.77176, 50.77316,   -1.26001, -2.27995, 185.69971},
    {2567.21338, -109.19035, 51.09072,   -1.02001, -5.87995, 196.49980},
    {2561.47437, -111.03144, 51.50289,   1.13999, -2.15995, 200.63979},
    {2559.19873, -111.82446, 50.95762,   6.23999, 16.50005, 199.91982},
    {2556.43799, -112.94520, 50.27883,   11.03999, 13.68005, 199.91982},
    {2554.36987, -113.70684, 49.77145,   11.03999, 14.16006, 199.91982},
    {2552.70874, -114.32163, 49.35020,   1.26000, 19.92006, 199.91982},
    {2550.11572, -115.15445, 48.54627,   -10.98001, 17.70005, 184.55984},
    {2547.30005, -115.05643, 47.78476,   -14.52002, 11.94006, 158.57990},
    {2544.61353, -113.79769, 47.16158,   -10.26001, 17.70005, 176.93962},
    {2543.13208, -114.50652, 46.67077,   18.35997, 9.78007, 255.95969},
    {2542.46875, -119.37437, 45.56026,   16.07998, 10.02005, 257.63974},
    {2541.60596, -124.26193, 44.39967,   17.81996, 14.46004, 262.07956},
    {2541.34106, -126.93737, 44.24323,   8.09994, 4.50005, 247.31973},
    {2538.84863, -133.48969, 43.75040,   9.77995, -2.63995, 288.23938},
    {2542.14380, -145.29289, 43.62980,   -0.66000, -6.06000, -55.08002},
    {2543.21680, -147.01131, 43.69947,   0.00000, 0.00000, -63.66006},
    {2545.07495, -150.70575, 43.75140,   6.95995, 4.20005, 297.11951},
    {2546.17090, -152.89215, 43.35937,   7.01995, 9.84005, 298.61945},
    {2548.60181, -157.46967, 42.62954,   5.21995, 9.18005, 282.17957},
    {2548.17212, -158.21002, 42.44739,   -6.24004, 13.62005, 225.83946},
    {2546.24316, -159.43190, 42.01011,   -5.40004, 11.52007, 215.45950},
    {2542.92432, -161.96397, 41.10725,   -1.80004, 14.04005, 215.45950},
    {2539.63403, -164.51677, 40.25837,   -1.56004, 6.12005, 217.85959},
    {2536.77026, -166.73436, 39.46379,   -10.68004, 14.22005, 209.21957},
    {2533.12085, -168.57770, 38.75384,   -3.06004, 14.40005, 212.15953},
    {2532.58911, -169.00421, 38.63954,   -2.40004, 12.42005, 248.21936},
    {2531.46143, -171.55522, 37.97821,   -1.32004, 13.32005, 238.19917},
    {2528.65894, -175.88988, 36.79213,   -1.56004, 6.12005, 210.29942},
    {2526.75293, -177.10513, 36.33848,   -0.72004, 13.38003, 238.97919},
    {2524.95068, -180.12466, 35.55854,   -1.74004, 13.62008, 239.69928},
    {2523.29199, -182.97798, 34.78115,   -2.64004, 15.60006, 241.01923},
    {2521.30249, -186.28571, 33.98116,   -1.56004, 11.34005, 241.01923},
    {2519.49097, -188.83252, 33.37786,   -3.18004, 7.56005, 197.81931},
    {2517.91992, -188.00310, 33.32974,   -12.65999, -4.85996, 105.29935},
    {2517.36206, -185.94882, 33.66170,   -12.36004, -13.73995, 102.11936},
    {2516.63135, -182.99420, 34.11946,   -12.36004, -13.73995, 102.11936},
    {2515.95898, -179.87250, 34.70969,   -5.04004, -13.31996, 85.61935},
    {2516.16064, -175.97455, 35.54663,   -2.58004, -10.49996, 83.45938},
    {2516.59766, -169.64778, 36.89377,   -3.72004, -10.31994, 84.11935},
    {2516.65161, -167.59383, 37.30129,   -1.44004, 3.54003, 153.05914},
    {2514.80884, -167.01520, 37.26185,   -14.16004, 3.90003, 171.23924},
    {2512.18652, -166.62807, 37.08449,   -4.50005, 4.08003, 171.23924},
    {2510.98853, -166.49013, 36.97600,   -9.24002, 5.34003, 172.79922},
    {2507.06592, -166.19705, 36.65399,   -15.18004, 3.42003, 186.77921},
    {2505.34058, -166.26324, 36.46250,   -13.44004, 4.02003, 148.67924},
    {2503.72461, -165.00346, 36.53261,   -16.38006, -1.07996, 134.69931},
    {2502.34692, -163.67143, 36.64625,   -19.14004, -0.35995, 134.09941},
    {2500.29590, -161.71181, 36.81756,   -18.72004, -4.49996, 132.65927},
    {2498.25903, -159.72517, 37.01343,   -19.14005, -3.11997, 136.07932},
    {2496.87036, -158.62219, 37.08984,   -7.86004, 8.88004, 187.97931},
    {2495.70215, -158.94814, 36.89720,   0.06000, 14.40000, 243.77975},
    {2494.63159, -161.04338, 36.33104,   0.42000, 12.42000, 243.59975},
    {2493.99292, -162.40578, 35.99166,   1.92000, 12.06000, 245.63982},
    {2492.90698, -164.82423, 35.31757,   7.31999, 17.58001, 231.90015},
    {2491.07837, -166.98445, 34.70069,   7.31999, 13.08001, 238.97993},
    {2488.98413, -170.71660, 33.68633,   1.31999, 15.96001, 241.37985},
    {2487.31323, -173.93515, 32.80630,   1.31999, 15.96001, 240.59988},
    {2486.32983, -175.82375, 32.17799,   1.31999, 15.96001, 225.66000},
    {2484.37793, -177.86171, 31.40418,   1.31999, 15.96001, 211.74004},
    {2483.24048, -178.58817, 31.07219,   -11.22001, 3.35999, 142.80009},
    {2482.00244, -177.52014, 31.17464,   -10.26001, -3.00001, 131.22011},
    {2479.59570, -175.04816, 31.45767,   -16.38001, -3.48001, 132.24010},
    {2477.67944, -173.05865, 31.68155,   -14.22000, -5.22001, 138.60004},
    {2476.69287, -172.30594, 31.74026,   -10.98001, -0.24001, 173.15991},
    {2475.28516, -172.31354, 31.54092,   -12.00002, 13.19997, 208.13971},
    {2471.85376, -173.76535, 30.70879,   -10.08000, 13.19999, 203.33989},
    {2468.65576, -175.07091, 29.95936,   -10.68001, 12.78000, 203.57996},
    {2465.88745, -176.19379, 29.29689,   -11.04001, 14.21999, 209.16000},
    {2463.68774, -177.30911, 28.71253,   -11.28001, 17.33999, 200.39998},
    {2462.59326, -177.51100, 28.54527,   -21.84000, -4.98000, 144.54002},
    {2461.06543, -175.97314, 28.69972,   -18.60000, -4.98000, 134.27997},
    {2458.58691, -173.64728, 28.95789,   -18.48001, -4.68000, 134.27997},
    {2456.51172, -171.71600, 29.17935,   -18.12001, -5.94000, 134.27997},
    {2453.37109, -168.54892, 29.59043,   -7.50001, -13.02000, 103.25999},
    {2453.08081, -167.58246, 29.77588,   -5.58000, -8.34000, 104.27998},
    {2452.33154, -164.51715, 30.43333,   -4.44001, -12.48000, 100.85997},
    {2451.74170, -161.75089, 31.07087,   -6.95999, -11.58000, 101.09999},
    {2451.27466, -159.62242, 31.56612,   -10.20000, -8.70000, 114.78001},
    {2450.44409, -158.58669, 31.72845,   -11.93999, 6.12000, 182.63979},
    {2449.01318, -159.11162, 31.41429,   -11.94001, 13.14000, 201.60002},
    {2443.28638, -161.27873, 30.14827,   -9.54000, 14.10001, 199.56004},
    {2437.80200, -163.12328, 29.01546,   -14.04001, 2.28000, 147.60004},
    {2432.01929, -159.77113, 29.07715,   -14.10001, -0.36000, 156.60001},
    {2431.06763, -159.34007, 29.07359,   -14.10001, -0.36000, 145.62006},
    {2425.05835, -155.47380, 29.35715,   -14.10001, -0.36000, 141.65993},
    {2422.69141, -153.77238, 29.33359,   -6.06000, 5.82000, 142.68002},
    {2420.16602, -151.90570, 29.35358,   -6.06000, 5.82000, 147.29999},
    {2418.99438, -151.17201, 29.27379,   -4.86000, 6.54000, 147.29999},
    {2414.25854, -148.10167, 28.97485,   -4.44000, 6.18000, 150.53999},
    {2411.89331, -146.76390, 28.83004,   -6.84000, 4.44000, 150.24001},
    {2408.43823, -144.79489, 28.57376,   -6.06000, 11.10000, 170.51994},
    {2406.33081, -144.65866, 28.36774,   -2.70000, 9.72001, 212.81976},
    {2405.06543, -145.66394, 28.18895,   3.06000, 8.70000, 244.25974},
    {2403.71118, -148.54222, 27.87464,   3.72000, 5.22000, 244.25974},
    {2402.60669, -150.70955, 27.66435,   3.96000, 6.00000, 244.25974},
    {2401.79834, -152.47728, 27.14252,   4.80000, 22.14001, 244.25974},
    {2400.51563, -154.39659, 26.67950,   -1.92000, 14.10001, 203.93977},
    {2398.37476, -153.98187, 26.59482,   -16.50001, 3.42000, 163.85976},
    {2394.61377, -152.88173, 26.60701,   -14.70000, -2.94000, 158.21974},
    {2389.63843, -151.14464, 26.75354,   -15.36001, 0.90000, 163.91975},
    {2384.39185, -149.53903, 26.84348,   -5.76001, 2.64000, 161.27982},
    {2382.25195, -148.81792, 26.86701,   -4.98001, 2.22000, 173.57980},
    {2379.78687, -148.70923, 26.82204,   -5.76001, 1.92000, 213.17960},
    {2378.29248, -149.94749, 26.62255,   -7.86000, 9.06000, 219.47968},
    {2374.70264, -152.87775, 25.97411,   -6.84000, 8.58000, 219.47968},
    {2371.89380, -155.15839, 25.44366,   -7.86000, 9.00000, 220.73962},
    {2368.76294, -157.81424, 24.88641,   -1.44001, 6.36000, 219.47968},
    {2366.22949, -159.90721, 24.41940,   -1.98001, 8.21999, 219.47968},
    {2362.45410, -162.93825, 23.76512,   -2.76001, 9.48000, 219.47968},
    {2360.32031, -164.62871, 23.40246,   -4.20001, 3.54000, 190.25969},
    {2357.54736, -164.81807, 23.29413,   -3.36001, 0.54000, 152.75975},
    {2356.52710, -163.34412, 23.50785,   2.45999, -10.62000, 78.11978},
    {2357.44629, -160.89055, 23.96133,   4.85999, -6.17998, 67.07977},
    {2360.12744, -158.75630, 24.40790,   14.63999, -4.91999, 40.19978},
    {2363.59155, -156.03891, 25.00177,   11.87998, -9.05999, 38.81977},
    {2366.40234, -154.00146, 25.50633,   6.53998, -4.07999, 38.81977},
    {2369.44482, -151.55099, 26.02307,   9.71998, -6.47999, 67.61977},
    {2370.98022, -148.44391, 26.63511,   0.42000, 0.90000, 60.95977},
    {2371.76147, -147.15193, 26.68213,   2.09998, 2.52001, 63.05978},
    {2374.62158, -141.61777, 26.96450,   0.29998, 0.42001, 60.95977},
    {2377.47852, -135.95918, 27.19584,   0.29998, 0.42001, 60.95977},
    {2379.00513, -133.73564, 27.32893,   0.29998, 0.42001, 44.21977},
    {2383.25562, -129.75426, 27.75437,   -1.14002, -8.57999, 50.63980},
    {2386.70581, -125.37524, 28.11494,   -1.56002, -2.99999, 54.29980},
    {2388.01880, -123.52085, 28.27954,   -1.86002, -3.83999, 54.17979},
    {2389.81201, -121.14275, 28.53725,   -1.20002, -6.41999, 54.17979},
    {2391.60254, -118.51397, 28.51147,   -6.18002, 3.48001, 54.17979},
    {2393.57715, -115.96382, 28.17512,   -0.36002, 6.60001, 54.17979},
    {2395.41333, -113.57466, 27.88878,   -4.74002, 7.80000, 54.17979},
    {2396.67969, -111.96498, 27.67390,   -4.32002, 7.61999, 54.17979},
    {2397.64990, -110.67789, 27.46352,   -5.10002, 6.36000, 54.17979},
    {2398.81421, -109.09545, 27.15350,   -5.52002, 6.48000, 49.91979},
    {2400.34473, -108.67410, 27.08206,   -2.40002, 1.80000, 12.47980},
    {2401.77954, -108.92140, 27.11054,   -6.24002, -3.96000, -27.96021},
    {2404.43970, -110.44849, 27.45909,   -12.24002, -1.08000, -28.80021},
    {2407.53418, -112.18320, 27.77465,   -13.20001, -7.32000, -33.18021},
    {2410.90161, -114.08315, 28.17949,   -9.54002, -5.10000, -33.24022},
    {2412.71875, -115.14555, 28.33810,   -9.48002, -3.18000, -2.64021},
    {2414.33862, -114.54516, 28.21489,   -9.00002, 7.20000, 33.95979},
    {2419.94946, -110.73419, 27.55672,   -11.70003, 0.48000, 34.79980},
    {2422.57324, -108.88780, 27.41489,   1.67999, -3.71999, 35.03978},
    {2426.13477, -106.36673, 27.63780,   -0.36002, -2.69999, 38.27979},
    {2428.74414, -104.28713, 27.80654,   0.77998, -4.55999, 35.03978},
    {2430.41895, -103.52805, 27.95777,   0.71998, -7.37999, -28.02022},
    {2432.17212, -104.64689, 28.09438,   -2.10002, -8.09998, -33.48021},
    {2437.37134, -108.10075, 28.45246,   1.79998, 0.96001, -33.48021},
    {2443.89014, -111.94403, 28.92944,   0.65998, 0.12001, -33.48021},
    {2445.26611, -111.72311, 29.06165,   -0.00002, -2.21999, 26.15979},
    {2448.72852, -110.06349, 29.25089,   1.13998, -0.05999, 27.65979},
    {2452.12280, -108.32289, 29.50967,   0.35998, -5.15999, 26.27979},
    {2456.32446, -106.60768, 29.80493,   0.29998, -5.21999, 9.83979},
    {2457.53540, -106.99258, 29.81862,   0.71998, -8.09999, -41.46021},
    {2457.71973, -108.91713, 29.91821,   2.27998, 0.36001, -136.08022},
    {2452.32373, -114.24855, 29.46852,   1.85998, 2.94001, -136.08022},
    {2448.74707, -117.49696, 29.34564,   -0.54002, 1.44001, -136.08022},
    {2447.43970, -119.62630, 29.23224,   -0.54002, 1.44001, -136.08022},
    {2443.91089, -122.61962, 29.71679,   0.89998, -9.11999, -133.56032},
    {2440.52563, -126.19189, 30.15053,   0.05998, -4.61999, -133.56032},
    {2439.19458, -128.15633, 30.27367,   -0.90002, -3.95999, -83.52032},
    {2439.51660, -130.73792, 30.56507,   0.89998, -9.11999, -83.52032},
    {2440.16309, -135.85231, 30.97442,   1.55998, -5.39999, -95.52032},
    {2439.79639, -139.50758, 31.38098,   0.89998, -9.11999, -83.52032},
    {2439.75122, -141.35539, 31.51229,   0.83998, -5.09999, -83.52032},
    {2440.60938, -142.41876, 31.58156,   0.41998, 1.86001, -27.30031},
    {2446.89526, -145.97241, 31.98779,   0.59998, -0.53999, -27.30031},
    {2453.79736, -149.19138, 32.38464,   0.35998, -1.67999, -27.30031},
    {2456.84741, -151.30768, 32.58407,   0.41998, -1.01999, -27.30031},
    {2458.36865, -150.96579, 32.58407,   0.47998, -0.29999, 39.41969},
    {2461.03735, -148.63873, 32.39256,   -0.30002, 0.42001, 39.41969},
    {2463.53613, -146.37523, 32.39256,   0.17998, -5.63999, 39.41969},
    {2466.04907, -144.11807, 32.58729,   0.29998, -6.59999, 39.41969},
    {2468.64063, -142.01492, 32.85504,   0.89998, -9.11999, 39.41969},
    {2470.81201, -140.15263, 33.08303,   -10.32002, -1.61999, 55.55965},
    {2474.58252, -134.72958, 33.22862,   -3.06001, -1.61999, 37.07963},
    {2478.84082, -131.56064, 33.76067,   -8.58001, -4.91998, 30.23969},
    {2485.21802, -127.39878, 34.62670,   -8.58001, -4.91998, 5.33968},
    {2487.14600, -127.71056, 34.99605,   -1.98001, -8.51998, -19.80030},
    {2493.20386, -129.77182, 36.19863,   -0.48001, -10.25998, -15.60031},
    {2502.23560, -132.42648, 37.97852,   -0.36001, -12.23998, -6.60031},
    {2505.24194, -132.78220, 38.58434,   -0.78001, -11.99998, -3.06031},
    {2506.56494, -132.21037, 38.65949,   0.17999, -4.37998, 39.17973},
    {2509.85718, -129.41074, 38.82175,   -2.28001, 0.36002, 39.17973},
    {2512.68726, -127.05914, 38.95215,   -1.56001, -3.17998, 39.17973},
    {2514.95996, -125.13311, 39.09752,   -4.20001, -13.37999, 38.21970},
    {2516.84131, -123.65053, 39.64294,   -4.26001, -11.93998, 38.21970},
    {2518.21729, -122.61185, 40.02911,   -11.34001, -8.64000, 64.01971},
    {2517.93433, -121.28461, 39.97273,   -11.88001, -5.82000, 98.87971},
    {2517.65356, -119.64011, 39.96365,   -11.58001, -3.30000, 96.05971},
    {2517.51782, -118.07928, 39.93137,   -11.28001, -2.70000, 85.37969},
    {2517.81030, -115.21220, 40.14080,   -11.28001, -7.80000, 80.09971},
    {2518.96167, -111.75326, 40.60366,   -5.04001, -7.67998, 60.89972},
    {2520.72583, -108.83081, 41.25756,   -3.36001, -7.91999, 57.35972},
    {2522.44556, -106.18806, 41.85997,   -3.54001, -7.07999, 50.03972},
    {2524.02954, -104.19668, 42.43188,   -8.28000, -9.71999, 37.61970},
    {2525.15454, -103.64717, 42.79637,   12.12000, -12.24000, -11.58028},
    {2527.84204, -104.77555, 43.44080,   7.55998, -14.64000, -22.38026},
    {2530.34058, -105.88479, 44.01268,   10.01998, -12.23999, -21.90026},
    {2532.61914, -106.93579, 44.57405,   11.15999, -12.96000, -19.50027},
    {2535.68286, -108.26857, 45.25946,   13.80000, -15.12000, -15.36028},
    {2537.84912, -108.30846, 45.87006,   -3.54000, -10.49999, 33.41970},
    {2539.03076, -106.30060, 46.40001,   -2.46000, -12.35999, 45.95972},
    {2540.05908, -104.80098, 46.65862,   -0.78000, -9.47999, 58.31976},
    {2541.51025, -102.27219, 47.07344,   1.14000, -9.30000, 53.93974},
    {2542.93579, -101.92500, 47.44775,   0.54000, -11.94000, 3.59975},
    {2545.99023, -101.76364, 48.14766,   1.44000, -8.76000, 3.59975},
    {2549.36597, -101.63422, 48.93906,   2.40000, -13.80000, 3.59975},
    {2552.63794, -101.45821, 49.70052,   -1.14000, -10.13999, 13.01974},
    {2556.31226, -100.67959, 50.56459,   0.30000, -18.24002, 9.83974},
    {2558.62598, -100.32417, 51.15274,   -0.12000, -15.30000, -7.08026},
    {2561.52905, -100.85792, 51.78149,   1.14000, -2.21999, -16.38027},
    {2564.75732, -101.68493, 51.47925,   2.16000, 3.30001, -7.38026},
    {2566.51367, -101.65430, 51.29282,   -1.08000, 3.54001, 26.99974},
    {2569.12036, -100.23982, 51.10815,   1.02000, 3.30001, 26.99974},
    {2571.89746, -98.76382, 50.94110,   0.48000, 2.10001, 28.73974},
    {2574.89917, -97.19981, 50.68288,   0.72000, 2.34001, 26.99974},
    {2577.07397, -96.11878, 50.53225,   0.24000, 2.52001, 33.71976},
    {2578.92041, -94.94574, 50.52483,   1.14000, -0.95999, -19.32026},
    {2579.91626, -95.36192, 50.47052,   1.14000, 3.54001, -30.78026},
    {2582.75293, -96.92358, 50.09005,   0.84000, 0.48001, -29.64026},
    {2585.79761, -98.69651, 49.61611,   1.02000, 2.22001, -29.76026},
    {2588.32031, -100.24354, 49.35898,   0.96000, 2.76001, -34.80026},
    {2591.19141, -102.37157, 49.04004,   0.96000, 1.62001, -61.56025},
    {2592.03223, -104.68147, 48.91373,   0.96000, 2.76001, -85.08022},
    {2591.58276, -105.75769, 48.91373,   1.14000, -2.21999, -167.40016},
    {2589.92822, -106.06516, 49.05568,   1.14000, -2.21999, -180.72017},
    {2586.85352, -105.86936, 49.34853,   1.14000, -2.21999, -180.72017},
    {2583.48730, -105.81164, 49.65523,   1.14000, -2.21999, -180.72017},
    {2581.16455, -105.75837, 49.84979,   1.14000, -2.21999, -180.72017},
    {2578.16479, -105.63497, 50.17326,   1.14000, -2.21999, -179.34018},
    {2575.49121, -105.54254, 50.33878,   1.14000, -2.21999, -183.84013}
};

/*
                      _______ _____ __  __ ______ _____   _____
                     |__   __|_   _|  \/  |  ____|  __ \ / ____|
                        | |    | | | \  / | |__  | |__) | (___
                        | |    | | | |\/| |  __| |  _  / \___ \
                        | |   _| |_| |  | | |____| | \ \ ____) |
                        |_|  |_____|_|  |_|______|_|  \_\_____/

*/

timer CheckDeer[DEER_RESPAWN_TIME * 60 * 1000]()
{
    if(!DeerInfo[Dead])
        return 0;

    DestroyDynamicObject(DeerInfo[id]);
    ResetDeerVars();
    return StartDeer((random(20) > 10) ? (true) : (false));
}

timer DestroyDeerIcon[1500](dmid)
{
    if(IsValidDynamicMapIcon(dmid))
        return DestroyDynamicMapIcon(dmid);

    return 0;
}

timer SoundDeer[6000](wrand)
{
    if(!wrand || DeerInfo[Dead])
        return 0;

    GetDynamicObjectPos(DeerInfo[id], DeerInfo[PosX], DeerInfo[PosY], DeerInfo[PosZ]);

    new
        dmapid = CreateDynamicMapIcon(DeerInfo[PosX], DeerInfo[PosY], DeerInfo[PosZ], 37, 0, -1, -1, -1, 75.0, MAPICON_LOCAL);

    foreach(new i : Player)
    {
        if(IsPlayerInRangeOfPoint(i, 75.0, DeerInfo[PosX], DeerInfo[PosY], DeerInfo[PosZ]))
        {
            StopAudioStreamForPlayer(i);
            PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/ktqboi8wsp/deer.mp3", DeerInfo[PosX], DeerInfo[PosY], DeerInfo[PosZ], 75.0, 1);
        }
    }
    defer DestroyDeerIcon(dmapid);
    return 1;
}

timer CutDeer[1000](playerid)
{
    new
        drstr[33];

    CutTime --;

    format(drstr, sizeof(drstr), "~w~Preostalo ~g~%d ~w~sekundi!", CutTime);
    GameTextForPlayer(playerid, drstr, 999, 3);
    ApplyAnimationEx(playerid, "KNIFE", "Knife_G", 4.2, 0, 0, 0, 0, 999, 1, 0);

    if(!CutTime)
    {
        pMeat[playerid] += DeerInfo[Meat];

		SendMessage(playerid, MESSAGE_TYPE_SUCCESS, "ZavrSili ste sa rezanjem mesa! Odnesite meso u 24/7 kako bi ga prodali.");

		stop CutTimer;

		ClearAnimations(playerid, 1);
        TogglePlayerControllable(playerid, 1);

		CutTime = 0;
		DeerInfo[Meat] = 0;
        DeerInfo[pCutting] = -1;
    }
    return 1;
}

/*
                ##     ##  #######   #######  ##    ##  ######
                ##     ## ##     ## ##     ## ##   ##  ##    ##
                ##     ## ##     ## ##     ## ##  ##   ##
                ######### ##     ## ##     ## #####     ######
                ##     ## ##     ## ##     ## ##  ##         ##
                ##     ## ##     ## ##     ## ##   ##  ##    ##
                ##     ##  #######   #######  ##    ##  ######
*/

hook OnGameModeInit()
{
    CreateForrest();

    StartDeer((random(20) > 10) ? (true) : (false));
    return 1;
}

hook OnPlayerConnect(playerid)
{
    RemoveOldForrest(playerid);
    return 1;
}

hook function ResetPlayerVariables(playerid)
{
    if(DeerInfo[pCutting] == playerid && CutTime > 0)
    {
        stop CutTimer;
        DeerInfo[pCutting] = -1;
        CutTime = 0;
    }
    Whistle[playerid] = 0;
    WhistleTime[playerid] = 0;
    pMeat[playerid] = 0;
	return continue(playerid);
}

hook OnPlayerShootDynamicObj(playerid, weaponid, objectid, Float:x, Float:y, Float:z)
{
    if(objectid == DeerInfo[id] && !DeerInfo[Dead] && (weaponid == 25 || weaponid == 33 || weaponid == 34))
    {
        new
            Float:rX,
            Float:rY,
            Float:rZ,
            Float:ang;

 		StopDynamicObject(DeerInfo[id]);

        GetPlayerFacingAngle(playerid, ang);

        GetDynamicObjectPos(DeerInfo[id], DeerInfo[PosX], DeerInfo[PosY], DeerInfo[PosZ]);
        SetDynamicObjectPos(DeerInfo[id], DeerInfo[PosX], DeerInfo[PosY], (DeerInfo[PosZ] - 0.35));

        GetDynamicObjectRot(DeerInfo[id], rX, rY, rZ);

        SetDynamicObjectRot(DeerInfo[id], -91.00, rY, ang);

        DeerInfo[Dead] = true;

        defer CheckDeer();

        switch(weaponid)
        {
            case 25: DeerInfo[Meat] = 10 + random(20 - 10);
            case 33: DeerInfo[Meat] = 20 + random(30 - 20);
			case 34: DeerInfo[Meat] = 25 + random(35 - 25);
        }
        return 1;
    }
    return 1;
}

hook OnDynamicObjectMoved(objectid)
{
    if(objectid == DeerInfo[id] && !DeerInfo[Dead])
    {
        if((DeerInfo[rev]) ? (DeerInfo[pos] == 0) : (DeerInfo[pos] == sizeof(deer) - 1)) DeerInfo[pos] = (DeerInfo[rev]) ? (sizeof(deer) - 1) : (0);
        else DeerInfo[pos] = (DeerInfo[rev]) ? (DeerInfo[pos] - 1) : (DeerInfo[pos] + 1);

        ChangeDeerSpeed();
       	MoveDynamicObject(DeerInfo[id], deer[DeerInfo[pos]][0], deer[DeerInfo[pos]][1], deer[DeerInfo[pos]][2], DeerInfo[speed], (DeerInfo[rev]) ? (deer[DeerInfo[pos]][3] * -1) : (deer[DeerInfo[pos]][3]), (DeerInfo[rev]) ? (deer[DeerInfo[pos]][4] * -1) : (deer[DeerInfo[pos]][4]), (DeerInfo[rev]) ? (deer[DeerInfo[pos]][5] - 180.0) : (deer[DeerInfo[pos]][5]));
    }
    return 1;
}

StartDeer(reverse)
{
    new
        rand = 1 + random(sizeof(deer) - 2),
        curpos = (reverse) ? (rand - 1) : (rand + 1);


    DeerInfo[speed] = 1.5;
    DeerInfo[pCutting] = -1;

    DeerInfo[id] = CreateDynamicObject(19315, deer[rand][0], deer[rand][1], deer[rand][2], (reverse) ? (deer[rand][3] * -1) : (deer[rand][3]), (reverse) ? (deer[rand][4] * -1) : (deer[rand][4]), (reverse) ? (deer[rand][5] - 180.0) : (deer[rand][5]), -1, -1, -1, DEER_STREAM_DIST);
    MoveDynamicObject(DeerInfo[id], deer[curpos][0], deer[curpos][1], deer[curpos][2], DeerInfo[speed], (reverse) ? (deer[curpos][3] * -1) : (deer[curpos][3]), (reverse) ? (deer[curpos][4] * -1) : (deer[curpos][4]), (reverse) ? (deer[curpos][5] - 180.0) : (deer[curpos][5]));

    DeerInfo[pos] = curpos;
    DeerInfo[rev] = (reverse) ? (true) : (false);
    return 1;
}

ResetDeerVars()
{
    DeerInfo[rev] = false;
    DeerInfo[PosX] = 0.0;
    DeerInfo[PosY] = 0.0;
    DeerInfo[PosZ] = 0.0;
    DeerInfo[Meat] = 0;
    DeerInfo[Dead] = 0;
    DeerInfo[ResponseTime] = 0;
    DeerInfo[pCutting] = -1;
    return 1;
}

ChangeDeerSpeed()
{
    if(DeerInfo[Dead])
        return 0;

	if(IsAnyPlayerCloseToDeer())
	{
		if(DeerInfo[speed] != 15.0)
			DeerInfo[speed] = 15.0;
	}
	else
	{
		if(DeerInfo[speed] > 1.0)
			DeerInfo[speed] = DeerInfo[speed] - 1.0;
	}
    return 1;
}

IsAnyPlayerCloseToDeer()
{
	static
	    Float:deerx,
	    Float:deery,
	    Float:deerz;

	GetDynamicObjectPos(DeerInfo[id], deerx, deery, deerz);

	foreach(new i : Player)
	{
	    if(IsPlayerInRangeOfPoint(i, 35.0, deerx, deery, deerz))
	        return 1;
	}
	return 0;
}

stock CreateForrest()
{
    CreateDynamicObject(790, 2366.17334, -89.58080, 23.02584,   3.14159, 0.00000, 5.37516);
    CreateDynamicObject(790, 2361.09106, -116.20079, 22.80038,   3.14159, 0.00000, -21.32484);
    CreateDynamicObject(790, 2347.33740, -154.57997, 23.79224,   3.14159, 0.00000, 195.51515);
    CreateDynamicObject(790, 2349.31006, -172.07751, 19.83984,   3.14159, 0.00000, 122.43514);
    CreateDynamicObject(790, 2380.89673, -174.17342, 17.49131,   3.14159, 0.00000, -35.84485);
    CreateDynamicObject(790, 2388.53735, -101.93088, 23.06574,   0.00000, 0.00000, -173.99992);
    CreateDynamicObject(790, 2380.31519, -150.14578, 25.84741,   3.14159, 0.00000, 260.85513);
    CreateDynamicObject(790, 2391.49121, -138.73366, 25.82896,   3.14159, 0.00000, -120.92484);
    CreateDynamicObject(790, 2414.42798, -103.05527, 22.61099,   0.00000, 0.00000, -125.39990);
    CreateDynamicObject(790, 2399.08374, -152.55884, 23.91121,   3.14159, 0.00000, -28.58484);
    CreateDynamicObject(790, 2430.52759, -105.02180, 22.61099,   0.00000, 0.00000, -150.47984);
    CreateDynamicObject(790, 2400.83594, -123.01296, 27.32393,   0.00000, 0.00000, -195.53993);
    CreateDynamicObject(790, 2414.21069, -181.95708, 19.64750,   0.00000, 0.00000, -116.57986);
    CreateDynamicObject(790, 2408.51489, -159.63707, 26.99657,   0.00000, 0.00000, -185.93987);
    CreateDynamicObject(790, 2425.04541, -135.59909, 27.58925,   0.00000, 0.00000, -140.87991);
    CreateDynamicObject(790, 2417.17944, -170.39322, 21.46622,   0.00000, 0.00000, -305.27985);
    CreateDynamicObject(790, 2441.61890, -141.19635, 27.58925,   0.00000, 0.00000, -189.95992);
    CreateDynamicObject(790, 2456.86230, -107.63303, 22.61099,   0.00000, 0.00000, -91.13979);
    CreateDynamicObject(790, 2436.26929, -182.12019, 23.19680,   0.00000, 0.00000, -247.61990);
    CreateDynamicObject(790, 2457.42407, -149.61258, 27.96005,   0.00000, 0.00000, -50.51986);
    CreateDynamicObject(790, 2472.93774, -104.44978, 28.40051,   0.00000, 0.00000, -146.57979);
    CreateDynamicObject(790, 2473.61768, -124.99422, 29.66387,   0.00000, 0.00000, -117.47980);
    CreateDynamicObject(694, 2476.02979, -144.41571, 30.21040,   0.00000, 0.00000, -53.57981);
    CreateDynamicObject(790, 2475.65137, -173.60973, 29.55895,   0.00000, 0.00000, -95.63980);
    CreateDynamicObject(790, 2482.21045, -97.76750, 32.41203,   0.00000, 0.00000, -265.61972);
    CreateDynamicObject(790, 2482.11768, -114.38875, 31.19223,   0.00000, 0.00000, -308.57968);
    CreateDynamicObject(790, 2499.10547, -147.43773, 35.24278,   0.00000, 0.00000, -385.79965);
    CreateDynamicObject(790, 2477.93994, -162.37160, 30.55897,   0.00000, 0.00000, -303.77960);
    CreateDynamicObject(834, 2517.97656, -124.77903, 41.92048,   8.16000, -11.04001, -46.73999);
    CreateDynamicObject(846, 2514.79346, -117.84926, 39.32291,   -2.94000, -12.96001, 24.54000);
    CreateDynamicObject(647, 2517.59521, -116.94121, 40.27205,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(647, 2518.98218, -122.04812, 41.03627,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(647, 2518.06104, -119.77074, 40.74332,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(839, 2602.93896, -140.46255, 46.68410,   -9.18001, -1.44000, -162.48006);
    CreateDynamicObject(790, 2505.78589, -164.65640, 33.66806,   0.00000, 0.00000, -355.19962);
    CreateDynamicObject(790, 2505.09570, -105.84436, 35.12325,   0.00000, 0.00000, -199.49971);
    CreateDynamicObject(790, 2512.91113, -153.27335, 39.21142,   0.00000, 0.00000, -213.77971);
    CreateDynamicObject(790, 2515.55542, -168.87497, 34.36206,   0.00000, 0.00000, -269.99945);
    CreateDynamicObject(790, 2526.92505, -117.66502, 40.79929,   -6.42000, 2.58000, -188.21967);
    CreateDynamicObject(790, 2528.01807, -138.28113, 40.43000,   0.00000, 0.00000, -264.35956);
    CreateDynamicObject(790, 2532.39893, -154.89615, 37.89720,   0.00000, 0.00000, -302.63947);
    CreateDynamicObject(790, 2538.28613, -182.10938, 37.89720,   0.00000, 0.00000, -274.97940);
    CreateDynamicObject(790, 2547.84106, -167.50726, 37.89720,   0.00000, 0.00000, -248.57951);
    CreateDynamicObject(790, 2545.72217, -138.48268, 43.71774,   0.00000, 0.00000, -283.01947);
    CreateDynamicObject(790, 2540.73853, -126.65438, 40.79929,   -6.42000, 2.58000, -214.13966);
    CreateDynamicObject(790, 2546.74561, -91.04585, 43.59861,   0.00000, 0.00000, -35.52000);
    CreateDynamicObject(790, 2552.43091, -100.24106, 47.89950,   0.00000, 0.00000, 71.94002);
    CreateDynamicObject(790, 2570.05347, -132.45810, 46.03885,   0.00000, 0.00000, 244.01991);
    CreateDynamicObject(790, 2569.68750, -194.39633, 37.89720,   0.00000, 0.00000, -147.77966);
    CreateDynamicObject(790, 2566.68994, -155.94164, 42.79606,   0.00000, 0.00000, -177.23958);
    CreateDynamicObject(790, 2564.10864, -93.46275, 47.41325,   0.00000, 0.00000, 115.68002);
    CreateDynamicObject(790, 2589.41602, -186.75766, 36.27206,   0.00000, 0.00000, -98.81964);
    CreateDynamicObject(790, 2576.35693, -163.17532, 42.79606,   0.00000, 0.00000, -219.53958);
    CreateDynamicObject(694, 2588.10181, -132.40393, 45.81105,   3.14159, 0.00000, 1.85878);
    CreateDynamicObject(790, 2577.85449, -108.08615, 46.21892,   0.00000, 0.00000, 89.10001);
    CreateDynamicObject(790, 2603.80322, -88.03198, 47.54326,   8.82000, 1.44000, -31.37995);
    CreateDynamicObject(790, 2603.96411, -110.85205, 48.67924,   0.00000, 0.00000, 115.02004);
    CreateDynamicObject(790, 2612.27344, -141.54825, 41.04506,   0.00000, 0.00000, 105.12006);
    CreateDynamicObject(790, 2609.39453, -173.08185, 41.04506,   0.00000, 0.00000, 152.52005);
    CreateDynamicObject(790, 2603.84033, -186.80487, 35.96699,   0.00000, 0.00000, 31.02007);
    CreateDynamicObject(731, 2588.10352, -209.15471, 35.15546,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(790, 2570.58252, -220.16733, 30.87245,   0.00000, 0.00000, -189.65961);
    CreateDynamicObject(790, 2603.47388, -211.27417, 35.96699,   0.00000, 0.00000, 45.84008);
    CreateDynamicObject(790, 2583.23022, -220.54030, 30.39555,   0.00000, 0.00000, 69.24009);
    CreateDynamicObject(790, 2346.51367, -194.31395, 17.28160,   3.14159, 0.00000, 143.55521);
    CreateDynamicObject(790, 2323.23022, -169.39075, 19.14966,   3.14159, 0.00000, 54.15521);
    CreateDynamicObject(801, 2471.96265, -154.53014, 33.72980,   0.00000, 0.00000, 152.15993);
    CreateDynamicObject(801, 2489.48633, -164.56934, 33.49319,   3.72000, -6.06000, 68.21994);
    CreateDynamicObject(801, 2526.73975, -139.09886, 40.14665,   0.00000, 0.00000, -161.15964);
    CreateDynamicObject(801, 2412.50708, -128.03708, 29.11441,   0.00000, 0.00000, 134.40002);
    CreateDynamicObject(801, 2453.90283, -109.06718, 28.55850,   0.00000, 0.00000, -0.11998);
    CreateDynamicObject(800, 2441.62964, -140.04536, 30.06456,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(801, 2356.71777, -160.97577, 23.06474,   5.46000, -5.16000, 77.88003);
    CreateDynamicObject(802, 2379.09912, -149.63487, 26.50320,   11.69999, -22.02003, 10.08000);
    CreateDynamicObject(801, 2523.70776, -105.81342, 40.70934,   0.00000, 0.00000, 67.92001);
    CreateDynamicObject(800, 2538.45874, -118.16900, 44.25685,   0.00000, 0.00000, -3.30000);
    CreateDynamicObject(801, 2590.22998, -209.06206, 35.09522,   9.84000, 1.86000, -41.40000);
    CreateDynamicObject(800, 2607.36084, -146.15874, 44.30703,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2608.37354, -142.07474, 43.91356,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2606.63940, -136.98714, 45.92239,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2587.24268, -199.71281, 37.62318,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(802, 2551.77588, -178.85519, 38.24747,   19.91999, -4.08000, 2.10001);
    CreateDynamicObject(801, 2495.05396, -120.43390, 34.83009,   0.00000, 0.00000, -67.79999);
    CreateDynamicObject(800, 2386.22461, -122.95019, 27.09938,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2402.86743, -108.02988, 25.30144,   0.00000, 0.00000, 59.16002);
    CreateDynamicObject(800, 2359.39160, -165.45384, 23.16751,   0.00000, 0.00000, 45.17999);
    CreateDynamicObject(802, 2369.51782, -101.39257, 26.05997,   4.02000, 6.00000, 22.74000);
    CreateDynamicObject(801, 2416.94653, -168.68329, 24.58106,   0.00000, 0.00000, 87.23997);
    CreateDynamicObject(800, 2419.62866, -151.75804, 28.87874,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2561.10620, -104.37217, 52.10388,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2548.78467, -158.05602, 42.05844,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(802, 2464.27490, -176.62088, 28.73510,   -4.26000, -5.88000, 41.82000);
    CreateDynamicObject(800, 2511.65991, -166.23599, 37.13672,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2452.97705, -168.66544, 29.86314,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(801, 2543.21851, -147.09190, 42.61499,   0.00000, 0.00000, -63.77999);
    CreateDynamicObject(801, 2591.56909, -103.81102, 48.02233,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2550.59448, -128.82155, 45.91652,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2360.41675, -131.44591, 25.99185,   0.00000, 0.00000, -56.34001);
    CreateDynamicObject(801, 2394.90601, -89.70473, 24.64312,   0.00000, 0.00000, 189.23991);
    CreateDynamicObject(800, 2436.31958, -102.80701, 28.23251,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2484.79761, -97.72227, 33.74496,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2469.93506, -142.41878, 33.53062,   0.00000, 0.00000, 0.48000);
    CreateDynamicObject(800, 2569.44873, -131.68002, 47.18356,   0.00000, 0.00000, 39.78001);
    CreateDynamicObject(800, 2591.24854, -156.58304, 43.68638,   0.00000, 0.00000, -44.16000);
    CreateDynamicObject(800, 2414.02954, -116.46251, 28.18636,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2476.47339, -171.72160, 31.62418,   0.00000, 0.00000, -3.30000);
    CreateDynamicObject(801, 2420.98096, -183.00069, 21.97621,   1.20000, -9.00000, 97.98000);
    CreateDynamicObject(800, 2431.88062, -160.04015, 28.72714,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2532.84888, -168.96709, 37.95917,   0.00000, 0.00000, -14.34000);
    CreateDynamicObject(731, 2505.55688, -131.17720, 36.79587,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2505.06226, -134.85626, 38.92058,   0.00000, 0.00000, -38.76000);
    CreateDynamicObject(800, 2370.09839, -140.62595, 24.00532,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2401.50366, -179.69485, 21.56703,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2554.35400, -183.46356, 37.62947,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2597.86328, -187.26462, 40.19331,   0.00000, 0.00000, -80.64000);
    CreateDynamicObject(800, 2602.60864, -111.71793, 46.98897,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2347.32593, -176.83844, 20.23155,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2612.54199, -219.39627, 37.31084,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(801, 2359.12158, -115.15080, 25.84485,   4.50000, -2.52000, 103.02000);
    CreateDynamicObject(800, 2364.50952, -115.94539, 26.61981,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(835, 2551.83301, -107.94460, 51.50602,   2.39999, -13.43999, 0.00000);
    CreateDynamicObject(837, 2543.59009, -110.22207, 47.05053,   -14.51999, 5.34000, -224.99997);
    CreateDynamicObject(800, 2545.03809, -108.60241, 46.67829,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2547.89453, -111.14503, 47.07049,   0.00000, 0.00000, -67.38000);
    CreateDynamicObject(848, 2570.94849, -110.58665, 51.77575,   4.20000, 4.50000, 0.00000);
    CreateDynamicObject(833, 2574.00269, -112.10921, 50.46243,   8.82000, -13.80002, 58.43998);
    CreateDynamicObject(800, 2572.34058, -106.07404, 50.08388,   0.00000, 0.00000, 5.70000);
    CreateDynamicObject(800, 2575.43945, -107.55990, 50.08388,   0.00000, 0.00000, 104.93999);
    CreateDynamicObject(802, 2575.78589, -113.20959, 49.96195,   15.05997, -5.94000, 96.71996);
    CreateDynamicObject(801, 2570.42896, -112.29907, 49.86781,   0.00000, 0.00000, -149.03999);
    CreateDynamicObject(843, 2590.92041, -174.24200, 41.92372,   2.94000, -10.74000, 76.02000);
    CreateDynamicObject(802, 2589.19263, -175.72444, 41.08751,   18.96000, -6.90000, 0.00000);
    CreateDynamicObject(801, 2589.01123, -173.29630, 40.82006,   0.00000, 0.00000, 104.34002);
    CreateDynamicObject(800, 2588.21021, -180.25017, 40.56652,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2577.45288, -143.78439, 45.41658,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2570.98511, -216.03513, 32.25212,   0.00000, 0.00000, -57.11999);
    CreateDynamicObject(800, 2367.26611, -149.27910, 24.24200,   0.00000, 0.00000, -47.70000);
    CreateDynamicObject(790, 2468.78491, -194.23192, 26.01046,   0.00000, 0.00000, -160.43979);
    CreateDynamicObject(790, 2494.76245, -191.14790, 26.20214,   0.00000, 0.00000, -441.95963);
    CreateDynamicObject(790, 2518.75317, -187.22696, 26.20214,   0.00000, 0.00000, -401.09970);
    CreateDynamicObject(790, 2537.55005, -203.38522, 29.67202,   0.00000, 0.00000, -489.17963);
    CreateDynamicObject(790, 2552.51196, -216.43184, 28.56275,   0.00000, 0.00000, -541.67969);
    CreateDynamicObject(800, 2511.47656, -184.78421, 32.84153,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(800, 2494.89185, -163.50162, 36.15457,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(844, 2376.50635, -108.56357, 27.30835,   -11.04000, -0.84000, -26.88000);
    CreateDynamicObject(801, 2374.27246, -108.18375, 25.92836,   5.70000, -2.04000, 143.87996);
    CreateDynamicObject(800, 2379.76709, -107.21395, 26.21427,   0.00000, 0.00000, 16.26000);
    CreateDynamicObject(800, 2549.99634, -113.50260, 47.07049,   0.00000, 0.00000, -107.28001);
}

stock RemoveOldForrest(playerid)
{
    RemoveBuildingForPlayer(playerid, 785, 2485.7109, -131.5703, 30.7266, 0.25);
    RemoveBuildingForPlayer(playerid, 785, 2576.2344, -131.1406, 44.0859, 0.25);
    RemoveBuildingForPlayer(playerid, 785, 2437.8359, -152.0703, 24.9766, 0.25);
    RemoveBuildingForPlayer(playerid, 696, 2401.0234, -139.3125, 31.9453, 0.25);
    RemoveBuildingForPlayer(playerid, 791, 2437.8359, -152.0703, 24.9766, 0.25);
    RemoveBuildingForPlayer(playerid, 689, 2443.2109, -123.8047, 28.4141, 0.25);
    RemoveBuildingForPlayer(playerid, 791, 2485.7109, -131.5703, 30.7266, 0.25);
    RemoveBuildingForPlayer(playerid, 696, 2534.2109, -143.2109, 46.7656, 0.25);
    RemoveBuildingForPlayer(playerid, 698, 2560.3359, -163.7266, 44.7656, 0.25);
    RemoveBuildingForPlayer(playerid, 791, 2576.2344, -131.1406, 44.0859, 0.25);
    RemoveBuildingForPlayer(playerid, 790, 2530.3828, -99.5156, 48.5625, 0.25);
    RemoveBuildingForPlayer(playerid, 698, 2570.5391, -80.1172, 53.5078, 0.25);
    RemoveBuildingForPlayer(playerid, 790, 2600.7734, -169.0781, 46.2500, 0.25);
    RemoveBuildingForPlayer(playerid, 698, 2614.3516, -209.8984, 41.8359, 0.25);
    RemoveBuildingForPlayer(playerid, 689, 2619.8047, -94.8203, 48.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 696, 2647.3750, -123.9844, 46.5234, 0.25);
}

/*
                         ######  ##     ## ########   ######
                        ##    ## ###   ### ##     ## ##    ##
                        ##       #### #### ##     ## ##
                        ##       ## ### ## ##     ##  ######
                        ##       ##     ## ##     ##       ##
                        ##    ## ##     ## ##     ## ##    ##
                         ######  ##     ## ########   ######
*/
CMD:buywhistle(playerid, params[])
{
	// if(!IsAt247(playerid)) return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Niste unutar 24/7!");
	if(GetPlayerMoney(playerid) < 20)
		return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Nemas dovoljno novca za kupovinu zvizdaljke (20$)");

	if(Whistle[playerid] >= 1)
		return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Vec imas zvizdaljku.");
	
	PlayerToBudgetMoney(playerid, 50); // novac od kupljene zvizdaljke ide u proracun
	Whistle[playerid] = 1;
	SendClientMessage(playerid, COLOR_RED, "[!] Kupio si zvizdaljku za 20$.");
	
	return 1;
}

CMD:usewhistle(playerid, params[])
{
    if(!Whistle[playerid])
        return SendMessage(playerid, MESSAGE_TYPE_ERROR, "NemaS zviZdaljku za jelene!");

    if(WhistleTime[playerid] > gettimestamp())
        return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Pri�ekajte nekoliko sekundi prije ponovnog koriStenja zviZdaljke!");

    if(IsPlayerInAnyVehicle(playerid))
        return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Ne moZete koristiti zviZdaljku dok ste u vozilu!");

    GetDynamicObjectPos(DeerInfo[id], DeerInfo[PosX], DeerInfo[PosY], DeerInfo[PosZ]);

    if(!IsPlayerInRangeOfPoint(playerid, 150.0, DeerInfo[PosX], DeerInfo[PosY], DeerInfo[PosZ]))
        return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Ne moZete koristiti zviZdaljku ovdje!");

    if(IsPlayerInRangeOfPoint(playerid, 75.0, DeerInfo[PosX], DeerInfo[PosY], DeerInfo[PosZ]) && !DeerInfo[Dead] && DeerInfo[ResponseTime] < gettimestamp())
        defer SoundDeer((random(20) > 10) ? (true) : (false)), DeerInfo[ResponseTime] = gettimestamp() + 30;

	new
        Float:wx,
        Float:wy,
        Float:wz;

	GetPlayerPos(playerid, wx, wy, wz);

	foreach(new i : Player)
    {
        if(IsPlayerInRangeOfPoint(i, 75.0, wx, wy, wz))
        {
            StopAudioStreamForPlayer(i);
            PlayAudioStreamForPlayer(i, "http://k003.kiwi6.com/hotlink/vs9q8chk3z/deerwhistle.mp3", wx, wy, wz, 75.0, 1);
        }
    }
	WhistleTime[playerid] = gettimestamp() + 30;

	return 1;
}

CMD:cutdeer(playerid, params[])
{
    if(GetPlayerWeapon(playerid) != 4)
        return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Ne drZite noZ u ruci!");

    if(IsPlayerInAnyVehicle(playerid))
        return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Ne moZete to raditi dok ste u vozilu!");

    if(DeerInfo[pCutting] != -1)
        return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Ve� netko reZe meso jelena!");

    static
        Float:px,
        Float:py,
        Float:pz;

    GetDynamicObjectPos(DeerInfo[id], px, py, pz);

    if(!IsPlayerInRangeOfPoint(playerid, 2.0, px, py, pz) && DeerInfo[Dead])
        return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Niste blizu jelena!");

    if(!DeerInfo[Meat])
        return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Ve� je netko izrezao meso od jelena!");

    SetPlayerLookAt(playerid, px, py);

    SendMessage(playerid, MESSAGE_TYPE_SUCCESS, "Zapo�eli ste sa rezanjem mesa! Ukoliko Zelite prestati rezati upiSite /stopcutdeer!");

    CutTime = 60;
    CutTimer = repeat CutDeer(playerid);

    DeerInfo[pCutting] = playerid;

    GameTextForPlayer(playerid, "~w~Preostalo ~g~60 ~w~sekundi!", 999, 3);
    ApplyAnimationEx(playerid, "KNIFE", "Knife_G", 4.2, 0, 0, 0, 0, 999, 1, 0);
    TogglePlayerControllable(playerid, 0);
    return 1;
}

CMD:stopcutdeer(playerid, params[])
{
    if(DeerInfo[pCutting] != playerid)
        return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Ti ni ne reZeS jelena!");

    stop CutTimer;
    ClearAnimations(playerid, 1);
    CutTime = 60;
    DeerInfo[pCutting] = -1;
    TogglePlayerControllable(playerid, 1);

    SendMessage(playerid, MESSAGE_TYPE_SUCCESS, "Prekinuo si s rezanjem mesa!");
    return 1;
}

CMD:checkmeat(playerid, params[])
{
    if(!pMeat[playerid])
        return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Vi nemate mesa kod sebe!");

    new
        derstr[27];

    format(derstr, sizeof(derstr), "Imate %d kg mesa kod sebe!", pMeat[playerid]);
    SendClientMessage(playerid, COLOR_GREEN, derstr);
    return 1;
}

CMD:sellmeat(playerid, params[])
{
	//if(!IsAt247(playerid)) return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Niste unutar 24/7!");
	if(pMeat[playerid] <= 0)
		return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Nemate mesa kod sebe");

	new kolicina = pMeat[playerid] * randomEx(16,20);
	new string[34];
	format(string, sizeof(string), "Prodao si %d kg mesa za %d$.", pMeat[playerid], kolicina);
	BudgetToPlayerMoney(playerid, kolicina);
	SendClientMessage(playerid, COLOR_GREEN, string);
	pMeat[playerid] = 0;
	return 1;
}

CMD:hunthelp(playerid, params[])
{
	SendClientMessage(playerid, COLOR_ORANGE, "*__________________________________HUNT HELP__________________________________*");
	SendClientMessage(playerid, COLOR_GREY, "/usewhistle, /cutdeer, /stopcutdeer, /buywhistle, /sellmeat, /checkmeat");
	SendClientMessage(playerid, COLOR_GREY, "/usewhistle - koristenje zvizdaljke kojom otkrivate poziciju jelena.");
	SendClientMessage(playerid, COLOR_GREY, "/cutdeer - rezete meso jelena.");
	SendClientMessage(playerid, COLOR_GREY, "/stopcutdeer - prestajete sa rezanjem mesa.");
	SendClientMessage(playerid, COLOR_GREY, "/buywhistle - kupovanje zvizdaljke u 24/7.");
	SendClientMessage(playerid, COLOR_GREY, "/sellmeat - prodaja mesa u  24/7.");
	SendClientMessage(playerid, COLOR_GREY, "/checkmeat - provjera kolicine mesa.");
	return 1;

}

CMD:gotodeer(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1338)
	    return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Nisi ovlasten za koristenje ove komande.");
	    
	GetDynamicObjectPos(DeerInfo[id], DeerInfo[PosX], DeerInfo[PosY], DeerInfo[PosZ]);
	SetPlayerPos(playerid, DeerInfo[PosX], DeerInfo[PosY], (DeerInfo[PosZ] + 1));
	SendMessage(playerid, MESSAGE_TYPE_ERROR, "Teleportirao si se do jelena!");
	return 1;
}

CMD:deerinfo(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1338)
	    return SendMessage(playerid, MESSAGE_TYPE_ERROR, "Nisi ovlasten za koristenje ove komande.");

	static
 		gotod[58];
 		
    format(gotod, sizeof(gotod), "Jelen je trenutno na poziciji %d[REV:%b] i %s je.", DeerInfo[pos], DeerInfo[rev], (DeerInfo[Dead]) ? ("ubiven") : ("Ziv"));
	SendClientMessage(playerid, COLOR_GREEN, gotod);
	return 1;
}
